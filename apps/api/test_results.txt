============================= test session starts ==============================
platform darwin -- Python 3.12.2, pytest-8.4.1, pluggy-1.6.0 -- /Users/runout/awork/code/my_git/agent/apps/api/.venv/bin/python3
cachedir: .pytest_cache
rootdir: /Users/runout/awork/code/my_git/agent/apps/api
configfile: pytest.ini
plugins: Faker-37.5.3, anyio-4.9.0, asyncio-1.1.0, cov-6.2.1, langsmith-0.4.9
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 12 items

src/tests/ai/langgraph/test_state_graph.py::TestMessagesState::test_create_initial_state PASSED [  8%]
src/tests/ai/langgraph/test_state_graph.py::TestMessagesState::test_validate_state PASSED [ 16%]
src/tests/ai/langgraph/test_state_graph.py::TestWorkflowNode::test_node_execution PASSED [ 25%]
src/tests/ai/langgraph/test_state_graph.py::TestWorkflowNode::test_node_error_handling PASSED [ 33%]
src/tests/ai/langgraph/test_state_graph.py::TestConditionalRouter::test_routing_decision PASSED [ 41%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_add_nodes PASSED [ 50%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_build_graph PASSED [ 58%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_simple_workflow_execution PASSED [ 66%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_conditional_workflow_execution PASSED [ 75%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_workflow_pause_resume PASSED [ 83%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_workflow_cancel PASSED [ 91%]
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_workflow_error_recovery PASSED [100%]

=============================== warnings summary ===============================
src/ai/langgraph/checkpoints.py:19
  /Users/runout/awork/code/my_git/agent/apps/api/src/ai/langgraph/checkpoints.py:19: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_simple_workflow_execution
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_conditional_workflow_execution
src/tests/ai/langgraph/test_state_graph.py::TestLangGraphWorkflowBuilder::test_workflow_error_recovery
  /Users/runout/awork/code/my_git/agent/apps/api/.venv/lib/python3.12/site-packages/langgraph/graph/state.py:911: LangGraphDeprecatedSinceV10: `config_type` is deprecated and will be removed. Please use `context_schema` instead. Deprecated in LangGraph V1.0 to be removed in V2.0.
    super().__init__(**kwargs)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 12 passed, 4 warnings in 0.49s ========================
