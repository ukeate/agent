# 强化学习系统优化Docker镜像
# 多阶段构建优化镜像大小和构建时间

# ===============================
# 阶段1: 构建阶段
# ===============================
FROM python:3.12-slim as builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    pkg-config \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 设置Python环境变量
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# 安装uv包管理器（更快的Python包管理）
RUN pip install uv

# 复制依赖文件
COPY pyproject.toml uv.lock ./

# 创建虚拟环境并安装依赖
RUN uv venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN uv pip install --no-cache -r uv.lock

# ===============================
# 阶段2: 运行时阶段
# ===============================
FROM python:3.12-slim as runtime

# 创建非root用户
RUN groupadd -r rlsystem && useradd -r -g rlsystem rlsystem

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    curl \
    dumb-init \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 设置工作目录
WORKDIR /app

# 从构建阶段复制虚拟环境
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 复制应用代码
COPY src/ ./src/
COPY scripts/ ./scripts/

# 创建必要的目录
RUN mkdir -p logs tmp data \
    && chown -R rlsystem:rlsystem /app

# 设置Python路径
ENV PYTHONPATH="/app/src:$PYTHONPATH"

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 暴露端口
EXPOSE 8000

# 切换到非root用户
USER rlsystem

# 使用dumb-init作为PID 1
ENTRYPOINT ["dumb-init", "--"]

# 默认启动命令
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# ===============================
# 元数据标签
# ===============================
LABEL maintainer="AI Platform Team" \
      version="1.0.0" \
      description="强化学习推荐系统" \
      org.opencontainers.image.title="RL System API" \
      org.opencontainers.image.description="强化学习个性化推荐系统API服务" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.created="2025-08-22" \
      org.opencontainers.image.source="https://github.com/company/rl-system" \
      org.opencontainers.image.licenses="MIT"

# ===============================
# 构建参数和环境变量
# ===============================
ARG BUILD_DATE
ARG BUILD_VERSION
ARG GIT_COMMIT

ENV BUILD_DATE=${BUILD_DATE} \
    BUILD_VERSION=${BUILD_VERSION} \
    GIT_COMMIT=${GIT_COMMIT} \
    APP_ENV=production \
    LOG_LEVEL=INFO \
    WORKERS=4 \
    MAX_WORKERS=8 \
    TIMEOUT=30 \
    KEEPALIVE=2